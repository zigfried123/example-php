<?php

namespace frontend\modules\reports\models\orders\services;

use app\modules\order\models\OrderChangeData;
use app\modules\order\models\OrderStatus;
use app\modules\reports\models\orders\factories\OrderReportExporterByReportType;
use app\modules\order\services\OrderService;
use yii\db\Query;

class OrderReportExporterService
{

    private $searchModel;


    public function __construct($searchModel)
    {

        $this->searchModel = $searchModel;

    }

    public function getData($reportType)
    {

        $obj = (new OrderReportExporterByReportType())->initialize($reportType);

        $content = $this->getContent();

        //$columns = $obj->getColumns();

        return ['content' => $content];
    }

    private function getContent()
    {
        return OrderService::getModels($this->searchModel);
    }

    private static function isPreOrder($orderId)
    {
        return OrderChangeData::find()
            ->select('order_id')
            ->where([
                'order_id'     => $orderId,
                'change_field' => 'status_id',
                'change_val'   => [OrderStatus::STATUS_PRE, OrderStatus::STATUS_PRE_NOPARKING],
            ])
            ->one();
    }

    public static function getPreOrderTime($model)
    {

        $orderId = $model->order_id;

        $isPreOrder = self::isPreOrder($orderId);

        $time = false;

        if (isset($isPreOrder)) {
            $time = $model->find()->select('order_time')->where([
                'order_id'  => $orderId,
            ])
                ->scalar();
        }

        if (!$time) {
            return '';
        }

        return app()->formatter->asDateTime($time + $model->getOrderOffset(), 'short');

    }

}